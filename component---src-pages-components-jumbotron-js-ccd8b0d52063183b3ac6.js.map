{"version":3,"sources":["webpack://resume/./src/pages/components/Jumbotron.js"],"names":["Jumbotron","props","useEffect","makeItRain","increment","drops","backDrops","randoHundo","Math","floor","random","randoFiver","document","getElementById","innerHTML","id","className","type"],"mappings":"gKAIe,SAASA,EAAUC,IAUhCC,gBACE,WAGEC,MAEF,IAKF,IAAMA,EAAa,WASjB,IAJA,IAAIC,EAAY,EACZC,EAAQ,GACRC,EAAY,GAETF,EAAY,KAAK,CAGtB,IAAIG,EAAcC,KAAKC,MAAM,GAAAD,KAAKE,SAA0B,GAExDC,EAAcH,KAAKC,MAAM,EAAAD,KAAKE,SAAyB,GAI3DL,GAAS,mCAFTD,GAAaO,GAE4C,eAAiBA,EAAaA,EAAa,EAAI,KAAO,yBAA2BJ,EAAa,6BAA+BA,EAAa,mDAAqDA,EAAa,6BAA+BA,EAAa,0DAA4DA,EAAa,6BAA+BA,EAAa,mBACtaD,GAAa,mCAAqCF,EAAY,eAAiBO,EAAaA,EAAa,EAAI,KAAO,yBAA2BJ,EAAa,6BAA+BA,EAAa,mDAAqDA,EAAa,6BAA+BA,EAAa,0DAA4DA,EAAa,6BAA+BA,EAAa,mBAG9aK,SAASC,eAAe,kBAAkBC,UAAaT,EACvDO,SAASC,eAAe,iBAAiBC,UAAaR,GAIvD,OACE,uBAAKS,GAAG,YAAYC,UAAW,QAAQf,EAAMgB,MAC3C,uBAAKD,UAAU,gCACb,uBAAKD,GAAG,iBAAiBC,UAAU,mBACnC,uBAAKD,GAAG,gBAAgBC,UAAU","file":"component---src-pages-components-jumbotron-js-ccd8b0d52063183b3ac6.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./Jumbotron.css\";\r\n\r\nexport default function Jumbotron(props) {\r\n\r\n    //Acceptable props\r\n\r\n    //type = \"splat-toggle\"\r\n    //type = \"splat-toggle single-toggle\"\r\n    //type = \"splat-toggle back-row-toggle\"\r\n\r\n\r\n  // It takes a function\r\n  useEffect(\r\n    () => {\r\n      // This gets called after every render, by default\r\n      // (the first one, and every one after that)\r\n      makeItRain();\r\n    },\r\n    [\r\n      // dependencies to watch = leave blank to run once or you will get a stack overflow\r\n    ]\r\n  );\r\n\r\n  const makeItRain = function() {\r\n    //clear out everything\r\n    //Get element named rain then inner html to nothing\r\n    //document.getElementById('rain-body').innerHTML = '';\r\n\r\n    let increment = 0;\r\n    let drops = \"\";\r\n    let backDrops = \"\";\r\n  \r\n    while (increment < 100) {\r\n      //couple random numbers to use for various randomizations\r\n      //random number between 98 and 1\r\n      let randoHundo = (Math.floor(Math.random() * (98 - 1 + 1) + 1));\r\n      //random number between 5 and 2\r\n      let randoFiver = (Math.floor(Math.random() * (5 - 2 + 1) + 2));\r\n      //increment\r\n      increment += randoFiver;\r\n      //add in a new raindrop with various randomizations to certain CSS properties\r\n      drops += '<div class=\"drop\" style=\"left: ' + increment + '%; bottom: ' + (randoFiver + randoFiver - 1 + 100) + '%; animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;\"><div class=\"stem\" style=\"animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;\"></div><div class=\"splat\" style=\"animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;\"></div></div>';\r\n      backDrops += '<div class=\"drop\" style=\"right: ' + increment + '%; bottom: ' + (randoFiver + randoFiver - 1 + 100) + '%; animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;\"><div class=\"stem\" style=\"animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;\"></div><div class=\"splat\" style=\"animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;\"></div></div>';\r\n    }\r\n    \r\n   document.getElementById('rain-front-row').innerHTML = (drops);\r\n   document.getElementById('rain-back-row').innerHTML = (backDrops);\r\n\r\n  }\r\n\r\n  return (\r\n    <div id=\"rain-body\" className={'body '+props.type}>\r\n      <div className=\"back-row-toggle splat-toggle\">\r\n        <div id=\"rain-front-row\" className=\"rain front-row\"></div>\r\n        <div id=\"rain-back-row\" className=\"rain back-row\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}